<Application x:Class="MenuAggregator.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MenuAggregator"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!-- Data Grid Styling-->
        <Style x:Key="CenterGridHeader" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Background" Value="LightGray" />
            <Setter Property="BorderBrush" Value="Black" />
        </Style>
        <Style x:Key="CenterGridHeaderCheckBox" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Background" Value="LightGray" />
            <Setter Property="BorderBrush" Value="Black" />
        </Style>
        
        <Style x:Key="CenterCellText" TargetType="{x:Type DataGridCell}">
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            <Setter Property="FontSize" Value="16" />
        </Style>
        <!-- End Data Grid Styling-->

       

        <Style TargetType="{x:Type StackPanel}">
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="6"/>
                </Style>
            </Style.Resources>
        </Style>
        <LinearGradientBrush x:Key="mButtonGradientBrush" StartPoint="0,1" EndPoint="0,0">
            <GradientStop Color="Transparent" Offset="0" />
            <GradientStop Color="LightSteelBlue" Offset="1" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ButtonGradientBrush" StartPoint="0,1" EndPoint="0,0">
            <GradientStop Color="Transparent" Offset="0" />
            <GradientStop Color="Gray" Offset="1" />
        </LinearGradientBrush>
        <Style TargetType="{x:Type TextBox}">
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="0" />
                </Style>
            </Style.Resources>
        </Style>
        <Style x:Key="custButton" TargetType="{x:Type Button}" >
            <Setter Property="Width" Value="{Binding ElementName=conceptStackPanel}" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Background" Value="{StaticResource mButtonGradientBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True" RenderTransformOrigin="0.5,0.5" x:Name="ButtonGrid">
                            <Rectangle x:Name="innerRectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="black" StrokeThickness="1" Fill="{TemplateBinding Background}" RadiusX="20" RadiusY="20"/>
                            <DockPanel Name="myContentPresenterDockPanel">

                                <TextBlock Text="{TemplateBinding Content}" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Center" Padding="5,5,5,5" FontSize="24"/>

                            </DockPanel>
                        </Grid>
                        <!--what happens at various events-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property ="Rectangle.Stroke" TargetName="innerRectangle" Value="LightBlue"  />
                            </Trigger>
                            <Trigger Property ="IsPressed" Value ="True">
                                <Setter TargetName="ButtonGrid" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="custButton1" TargetType="{x:Type Button}" >
            <Setter Property="Width" Value="{Binding ElementName=conceptStackPanel}" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Background" Value="{StaticResource ButtonGradientBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True" RenderTransformOrigin="0.5,0.5" x:Name="ButtonGrid">
                            <Rectangle x:Name="innerRectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stroke="black" StrokeThickness="1" Fill="{TemplateBinding Background}" RadiusX="20" RadiusY="20"/>
                            <DockPanel Name="myContentPresenterDockPanel">

                                <TextBlock Text="{TemplateBinding Content}" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Center" Padding="5,5,5,5" FontSize="24"/>

                            </DockPanel>
                        </Grid>
                        <!--what happens at various events-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property ="Rectangle.Stroke" TargetName="innerRectangle" Value="LightBlue"  />
                            </Trigger>
                            <Trigger Property ="IsPressed" Value ="True">
                                <Setter TargetName="ButtonGrid" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
